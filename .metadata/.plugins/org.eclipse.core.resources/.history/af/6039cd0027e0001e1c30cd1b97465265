package recursividade;

import java.io.IOException;
import java.util.Scanner;

public class Figure {

	public static void main(String[] args) throws IOException {
		
		Scanner sc = new Scanner(System.in);
		int N = 0;
		
		N = validarN(sc);
		if (N == 0) {
			return;
		}
		enquantoHouverPrint(N, sc);
		
		sc.close();
	}
	
	public static int validarN(int N, Scanner sc) {
		try {
			N = Integer.parseInt(sc.nextLine());
		} catch {
			validarN(N, sc);
		} finally {
			
		}
		
		if(N <= 0 || N > 3000) {
			return validarN(sc);
		} else {
			return N;
		}
	}
	
	public static int validarFig(Scanner sc) {
		String line = sc.nextLine();
		String[] nums = line.split(" ");
		int num1, num2;
		num1 = Integer.parseInt(nums[0]);
		num2 = Integer.parseInt(nums[1]);
		if(num1 <= 0 || num2 <= 0) {
//			System.out.println("Insira um valor entre 1 e 1000");
			return validarFig(sc);
		} else {
			return mdc(num1, num2);
		}
	}
	
//	public static int mdc(int fig1, int fig2) {
//		int mdc = 1;
//		int division = 2;
//		if((fig1 % division == 0) && (fig2 % division == 0)) {
//			mdc *= division;
//			return mdc(fig1, fig2);
//		} else if ((fig1 % division == 0) || (fig2 % division == 0)) {
//			return mdc(fig1, fig2);
//		} else if ((fig1 % division != 0) && (fig2 % division != 0)) {
//			division += 1;
//			return mdc(fig1, fig2);
//		} else {
//			return mdc;
//		}
//	}
	
	public static int mdc(int fig1, int fig2) {
        if (fig2 == 0) {
            return fig1;
        } else {
            return mdc(fig2, fig1 % fig2);
        }
    }
	
	public static void enquantoHouverPrint(int N, Scanner sc) {
		int i = 0;
		
		paraNossaAlegria(N, i, sc);
	}
	
	
	//estrutura PARA
	public static int paraNossaAlegria(int N, int i, Scanner sc) {
		if(i < N) {
			int mdc = validarFig(sc);
			System.out.printf("%d\n",mdc);
			i++;
			return paraNossaAlegria(N, i, sc);
		} else {
			return 1;
		}
	}
}
